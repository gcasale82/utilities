import hashlib
import os
import shutil
import datetime
import time

class named_backup():
    def __init__(self):
        self.files = {'/home/casaleg/test/named/named.conf' : '' , '/home/casaleg/test/named/zone.dns' : ''}
        self.backup_dir = '/home/casaleg/test/named/backup/'

    def check_hash(self):
        BLOCK_SIZE = 1024
        for k,v in self.files.copy().items() :
            file_hash = hashlib.sha256()
            with open(k, 'rb') as f:
                fb = f.read(BLOCK_SIZE)
                while len(fb) > 0:
                    file_hash.update(fb)
                    fb = f.read(BLOCK_SIZE)
            if file_hash.hexdigest() == v :
                pass
            else :
                self.backup(k)
                self.files[k]= file_hash.hexdigest()
    def backup(self,k):
        filename = os.path.basename(k)
        now = datetime.datetime.now()
        timestamp = str(now.strftime("%Y_%m_%d_%H_%M_%S"))
        destination_file = self.backup_dir + filename + timestamp
        try :
            shutil.copy(k,destination_file)
        except :
            print("something went wrong during the copy!")

named_backup_istance = named_backup()
while True :
    time.sleep(10)
    named_backup_istance.check_hash()
